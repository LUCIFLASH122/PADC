 #include <stdio.h>
 #include <math.h>
 #include <omp.h>
 int is_prime(int num) {
    if (num <= 1) return 0;
 if (num <= 3) return 1;
 if (num % 2 == 0 || num % 3 == 0) return 0;
    for (int i = 5; i <= sqrt(num); i += 6) {
        if
 (num % i == 0 || num % (i + 2) == 0) return 0;
    }
    return 1;
 }
 int main() {
    int n = 100; // Define the upper limit for finding primes
    int prime_count = 0;
    #pragma omp parallel for reduction(+:prime_count)
    for (int i = 2; i <= n; i++) {
        if
 (is_prime(i)) {
            prime_count++;
        }
    }
    printf("Total number of primes up to %d is %d\n", n, prime_count);
    return 0;
 }
